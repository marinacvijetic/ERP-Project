package lillyBakery.ctrl;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import lillyBakery.jpa.Tblcategory;
import lillyBakery.repository.TblcategoryRepository;

@RestController
public class TblcategoryController {
	
	@Autowired
	private TblcategoryRepository repoCategory;
	
	@GetMapping("/category")
	public Collection<Tblcategory> getAllCategory(){
		
		return repoCategory.findAll();
	}
	
	@SuppressWarnings("deprecation")
	@GetMapping("/category/{id}")
	public Tblcategory getCategoryById(@PathVariable int id){
		
		return repoCategory.getOne(id);
		
	}
	
	@PostMapping("/category")
	public ResponseEntity<Tblcategory> createCategory(@RequestBody Tblcategory category){
		
		if(!repoCategory.existsById(category.getCategoryId()))
		{
			Tblcategory temp = repoCategory.save(category);
			return new ResponseEntity<Tblcategory>(temp, HttpStatus.CREATED);
		}else
		{
			return new ResponseEntity<Tblcategory>(HttpStatus.CONFLICT);
		}
	}
	
	@PutMapping("/category/{id}")
	public ResponseEntity<Tblcategory> updateCategory(@RequestBody Tblcategory category){
		if(repoCategory.existsById(category.getCategoryId()))
		{
			repoCategory.save(category);
			return new ResponseEntity<Tblcategory>(HttpStatus.OK);
		}else
		{
			return new ResponseEntity<Tblcategory>(HttpStatus.NOT_FOUND);
		}
	}

}
